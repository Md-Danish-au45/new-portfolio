{"ast":null,"code":"import _slicedToArray from\"/home/danish/Desktop/danishwork/new-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import MensajeIngles from'./../language/en.json';import MensajeEspañol from'./../language/es.json';import{IntlProvider}from'react-intl';import{jsx as _jsx}from\"react/jsx-runtime\";var langContext=/*#__PURE__*/React.createContext();var LangProvider=function LangProvider(_ref){var children=_ref.children;var localePorDefecto;var mensajesPorDefecto;var lang=localStorage.getItem('lang');if(lang){localePorDefecto=lang;if(lang==='es-ES'){mensajesPorDefecto=MensajeEspañol;}else if(lang==='en-US'){mensajesPorDefecto=MensajeIngles;}else{localePorDefecto='en-US';mensajesPorDefecto=MensajeIngles;}}var _useState=useState(mensajesPorDefecto),_useState2=_slicedToArray(_useState,2),mensaje=_useState2[0],setMensaje=_useState2[1];var _useState3=useState(localePorDefecto),_useState4=_slicedToArray(_useState3,2),locale=_useState4[0],setLocale=_useState4[1];var selectLanguage=function selectLanguage(language){switch(language){case'es-ES':setMensaje(MensajeEspañol);setLocale('es-ES');localStorage.setItem('lang','es-ES');break;case'en-US':setMensaje(MensajeIngles);setLocale('en-US');localStorage.setItem('lang','en-US');break;default:setMensaje(MensajeIngles);setLocale('en-US');localStorage.setItem('lang','en-US');}};return/*#__PURE__*/_jsx(langContext.Provider,{value:{selectLanguage:selectLanguage},children:/*#__PURE__*/_jsx(IntlProvider,{locale:locale,messages:mensaje,children:children})});};export{LangProvider,langContext};","map":{"version":3,"sources":["/home/danish/Desktop/danishwork/new-portfolio/src/context/Context.jsx"],"names":["React","useState","MensajeIngles","MensajeEspañol","IntlProvider","langContext","createContext","LangProvider","children","localePorDefecto","mensajesPorDefecto","lang","localStorage","getItem","mensaje","setMensaje","locale","setLocale","selectLanguage","language","setItem"],"mappings":"mIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,aAAP,KAA0B,uBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,uBAA3B,CACA,OAAQC,YAAR,KAA2B,YAA3B,C,2CAEA,GAAMC,CAAAA,WAAW,cAAGL,KAAK,CAACM,aAAN,EAApB,CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CACjC,GAAIC,CAAAA,gBAAJ,CACH,GAAIC,CAAAA,kBAAJ,CACA,GAAMC,CAAAA,IAAI,CAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb,CAEA,GAAGF,IAAH,CAAQ,CACPF,gBAAgB,CAAGE,IAAnB,CAEA,GAAGA,IAAI,GAAK,OAAZ,CAAoB,CACnBD,kBAAkB,CAAGP,cAArB,CACA,CAFD,IAEO,IAAGQ,IAAI,GAAK,OAAZ,CAAoB,CAC1BD,kBAAkB,CAAGR,aAArB,CACA,CAFM,IAEA,CACNO,gBAAgB,CAAG,OAAnB,CACAC,kBAAkB,CAAGR,aAArB,CACA,CACD,CAEE,cAA8BD,QAAQ,CAACS,kBAAD,CAAtC,wCAAOI,OAAP,eAAgBC,UAAhB,eACA,eAA4Bd,QAAQ,CAACQ,gBAAD,CAApC,yCAAOO,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,CAAa,CAChC,OAAQA,QAAR,EACI,IAAK,OAAL,CACIJ,UAAU,CAACZ,cAAD,CAAV,CACAc,SAAS,CAAC,OAAD,CAAT,CACAL,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAA6B,OAA7B,EACA,MACJ,IAAK,OAAL,CACIL,UAAU,CAACb,aAAD,CAAV,CACAe,SAAS,CAAC,OAAD,CAAT,CACAL,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAA6B,OAA7B,EACA,MACJ,QACIL,UAAU,CAACb,aAAD,CAAV,CACAe,SAAS,CAAC,OAAD,CAAT,CACAL,YAAY,CAACQ,OAAb,CAAqB,MAArB,CAA6B,OAA7B,EAdR,CAgBH,CAjBD,CAkBA,mBACI,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAACF,cAAc,CAAEA,cAAjB,CAA7B,uBACI,KAAC,YAAD,EAAc,MAAM,CAAEF,MAAtB,CAA8B,QAAQ,CAAEF,OAAxC,UACKN,QADL,EADJ,EADJ,CAOH,CA9CD,CAgDA,OAAQD,YAAR,CAAsBF,WAAtB","sourcesContent":["import React, {useState} from 'react';\r\nimport MensajeIngles from './../language/en.json';\r\nimport MensajeEspañol from './../language/es.json';\r\nimport {IntlProvider} from 'react-intl';\r\n\r\nconst langContext = React.createContext();\r\n\r\n\r\nconst LangProvider = ({children}) => {\r\n    let localePorDefecto;\r\n\tlet mensajesPorDefecto;\r\n\tconst lang = localStorage.getItem('lang');\r\n\r\n\tif(lang){\r\n\t\tlocalePorDefecto = lang\r\n\r\n\t\tif(lang === 'es-ES'){\r\n\t\t\tmensajesPorDefecto = MensajeEspañol;\r\n\t\t} else if(lang === 'en-US'){\r\n\t\t\tmensajesPorDefecto = MensajeIngles;\r\n\t\t} else {\r\n\t\t\tlocalePorDefecto = 'en-US'\r\n\t\t\tmensajesPorDefecto = MensajeIngles;\r\n\t\t}\r\n\t}\r\n\r\n    const [mensaje, setMensaje] = useState(mensajesPorDefecto);\r\n    const [locale, setLocale] = useState(localePorDefecto);\r\n\r\n    const selectLanguage = (language) =>{\r\n        switch (language) {\r\n            case 'es-ES':\r\n                setMensaje(MensajeEspañol);\r\n                setLocale('es-ES');\r\n                localStorage.setItem('lang', 'es-ES');\r\n                break;\r\n            case 'en-US':\r\n                setMensaje(MensajeIngles);\r\n                setLocale('en-US');\r\n                localStorage.setItem('lang', 'en-US');\r\n                break;\r\n            default:\r\n                setMensaje(MensajeIngles);\r\n                setLocale('en-US');\r\n                localStorage.setItem('lang', 'en-US');\r\n        }\r\n    }\r\n    return (\r\n        <langContext.Provider value={{selectLanguage: selectLanguage}}>\r\n            <IntlProvider locale={locale} messages={mensaje}>\r\n                {children}\r\n            </IntlProvider>\r\n        </langContext.Provider>\r\n    );\r\n};\r\n\r\nexport {LangProvider, langContext};"]},"metadata":{},"sourceType":"module"}