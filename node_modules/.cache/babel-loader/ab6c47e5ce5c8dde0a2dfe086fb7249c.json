{"ast":null,"code":"import _asyncToGenerator from \"/home/danish/Desktop/danishwork/new-portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"/home/danish/Desktop/danishwork/new-portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/home/danish/Desktop/danishwork/new-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/danish/Desktop/danishwork/new-portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/danish/Desktop/danishwork/new-portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/home/danish/Desktop/danishwork/new-portfolio/node_modules/@babel/runtime/regenerator/index.js\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Canvas_context;\n\nimport { clear as _clear, drawParticle as _drawParticle, drawParticlePlugin as _drawParticlePlugin, drawPlugin as _drawPlugin, paintBase as _paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\n\nfunction setTransformValue(factor, newFactor, key) {\n  var _a;\n\n  var newValue = newFactor[key];\n\n  if (newValue !== undefined) {\n    factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n  }\n}\n\nexport var Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    _classCallCheck(this, Canvas);\n\n    this.container = container;\n\n    _Canvas_context.set(this, void 0);\n\n    this.size = {\n      height: 0,\n      width: 0\n    };\n\n    __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n\n    this.generatedCanvas = false;\n  }\n\n  _createClass(Canvas, [{\n    key: \"clear\",\n    value: function clear() {\n      var _this = this;\n\n      var options = this.container.actualOptions,\n          trail = options.particles.move.trail;\n\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n      } else {\n        this.draw(function (ctx) {\n          _clear(ctx, _this.size);\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      } else {\n        this.resetOriginalStyle();\n      }\n\n      this.draw(function (ctx) {\n        _clear(ctx, _this2.size);\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n        return;\n      }\n\n      return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this3 = this;\n\n      var _a, _b, _c, _d, _e, _f;\n\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n\n      var radius = particle.getRadius();\n\n      if (radius <= 0) {\n        return;\n      }\n\n      var pfColor = particle.getFillColor(),\n          psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n\n      if (!pfColor && !psColor) {\n        return;\n      }\n\n      var _this$getPluginPartic = this.getPluginParticleColors(particle),\n          _this$getPluginPartic2 = _slicedToArray(_this$getPluginPartic, 2),\n          fColor = _this$getPluginPartic2[0],\n          sColor = _this$getPluginPartic2[1];\n\n      if (!fColor || !sColor) {\n        if (!fColor) {\n          fColor = pfColor ? pfColor : undefined;\n        }\n\n        if (!sColor) {\n          sColor = psColor ? psColor : undefined;\n        }\n      }\n\n      var options = this.container.actualOptions,\n          zIndexOptions = particle.options.zIndex,\n          zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n          opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1,\n          strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity,\n          zOpacity = opacity * zOpacityFactor,\n          zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      var colorStyles = {\n        fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n      };\n      colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n      this.draw(function (ctx) {\n        var transform = {};\n        var zSizeFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n            container = _this3.container;\n\n        var _iterator = _createForOfIteratorHelper(container.particles.updaters),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var updater = _step.value;\n\n            if (updater.beforeDraw) {\n              updater.beforeDraw(particle);\n            }\n\n            if (updater.getColorStyles) {\n              var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n                  fill = _updater$getColorStyl.fill,\n                  stroke = _updater$getColorStyl.stroke;\n\n              if (fill) {\n                colorStyles.fill = fill;\n              }\n\n              if (stroke) {\n                colorStyles.stroke = stroke;\n              }\n            }\n\n            if (updater.getTransformValues) {\n              var updaterTransform = updater.getTransformValues(particle);\n\n              for (var key in updaterTransform) {\n                setTransformValue(transform, updaterTransform, key);\n              }\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        _drawParticle(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, transform);\n\n        var _iterator2 = _createForOfIteratorHelper(container.particles.updaters),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _updater = _step2.value;\n\n            if (_updater.afterDraw) {\n              _updater.afterDraw(particle);\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        _drawParticlePlugin(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        _drawPlugin(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.resize();\n      this.initStyle();\n      this.initCover();\n      this.initTrail();\n      this.initBackground();\n      this.paint();\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n          background = options.background,\n          element = this.element,\n          elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n      if (!elementStyle) {\n        return;\n      }\n\n      if (background.color) {\n        var color = rangeColorToRgb(background.color);\n        elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.generatedCanvas = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n\n      __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this4 = this;\n\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          _clear(ctx, _this4.size);\n\n          _this4.paintBase(_this4.coverColorStyle);\n        } else {\n          _this4.paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container,\n          pxRatio = container.retina.pixelRatio,\n          size = container.canvas.size,\n          newSize = {\n        width: this.element.offsetWidth * pxRatio,\n        height: this.element.offsetHeight * pxRatio\n      };\n\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return;\n      }\n\n      var oldSize = Object.assign({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var container, needsRefresh, _iterator3, _step3, _step3$value, plugin;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.element) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.resize();\n                container = this.container, needsRefresh = container.updateActualOptions();\n                container.particles.setDensity();\n                _iterator3 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    _step3$value = _slicedToArray(_step3.value, 2), plugin = _step3$value[1];\n\n                    if (plugin.resize !== undefined) {\n                      plugin.resize();\n                    }\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n                if (!needsRefresh) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 10;\n                return container.refresh();\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n\n      return windowResize;\n    }()\n  }, {\n    key: \"getPluginParticleColors\",\n    value: function getPluginParticleColors(particle) {\n      var fColor, sColor;\n\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (!fColor && plugin.particleFillColor) {\n            fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n          }\n\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n          }\n\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"initCover\",\n    value: function initCover() {\n      var options = this.container.actualOptions,\n          cover = options.backgroundMask.cover,\n          color = cover.color,\n          coverRgb = rangeColorToRgb(color);\n\n      if (coverRgb) {\n        var coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n        this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    }\n  }, {\n    key: \"initStyle\",\n    value: function initStyle() {\n      var element = this.element,\n          options = this.container.actualOptions;\n\n      if (!element) {\n        return;\n      }\n\n      if (options.fullScreen.enable) {\n        this.originalStyle = deepExtend({}, element.style);\n        element.style.setProperty(\"position\", \"fixed\", \"important\");\n        element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n        element.style.setProperty(\"top\", \"0\", \"important\");\n        element.style.setProperty(\"left\", \"0\", \"important\");\n        element.style.setProperty(\"width\", \"100%\", \"important\");\n        element.style.setProperty(\"height\", \"100%\", \"important\");\n      } else {\n        this.resetOriginalStyle();\n      }\n\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n\n        var value = options.style[key];\n\n        if (!value) {\n          continue;\n        }\n\n        element.style.setProperty(key, value, \"important\");\n      }\n    }\n  }, {\n    key: \"initTrail\",\n    value: function initTrail() {\n      var options = this.container.actualOptions,\n          trail = options.particles.move.trail,\n          fillColor = rangeColorToRgb(trail.fillColor);\n\n      if (fillColor) {\n        var _trail = options.particles.move.trail;\n        this.trailFillColor = {\n          r: fillColor.r,\n          g: fillColor.g,\n          b: fillColor.b,\n          a: 1 / _trail.length\n        };\n      }\n    }\n  }, {\n    key: \"paintBase\",\n    value: function paintBase(baseColor) {\n      var _this5 = this;\n\n      this.draw(function (ctx) {\n        _paintBase(ctx, _this5.size, baseColor);\n      });\n    }\n  }, {\n    key: \"resetOriginalStyle\",\n    value: function resetOriginalStyle() {\n      var element = this.element,\n          originalStyle = this.originalStyle;\n\n      if (element && originalStyle) {\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n      }\n    }\n  }]);\n\n  return Canvas;\n}();\n_Canvas_context = new WeakMap();","map":{"version":3,"sources":["/home/danish/Desktop/danishwork/new-portfolio/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Canvas_context","clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","deepExtend","generatedAttribute","setTransformValue","factor","newFactor","key","_a","newValue","undefined","Canvas","container","size","height","width","generatedCanvas","options","actualOptions","trail","particles","move","backgroundMask","enable","paint","length","trailFillColor","draw","ctx","element","remove","resetOriginalStyle","cb","particle","delta","_b","_c","_d","_e","_f","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","getPluginParticleColors","fColor","sColor","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","opacity","bubble","strokeOpacity","stroke","zOpacity","zStrokeOpacity","colorStyles","fill","transform","zSizeFactor","sizeRate","updaters","updater","beforeDraw","getColorStyles","getTransformValues","updaterTransform","composite","shadow","afterDraw","plugin","resize","initStyle","initCover","initTrail","initBackground","background","elementStyle","style","color","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","canvas","dataset","originalStyle","offsetHeight","offsetWidth","getContext","retina","init","cover","coverColorStyle","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","needsRefresh","updateActualOptions","setDensity","plugins","refresh","particleFillColor","particleStrokeColor","coverRgb","coverColor","r","g","b","a","fullScreen","setProperty","toString","fillColor","baseColor","top","left","WeakMap"],"mappings":"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","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Canvas_context;\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        _Canvas_context.set(this, void 0);\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n        this.generatedCanvas = false;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        else {\n            this.resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    draw(cb) {\n        if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n            return;\n        }\n        return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor || !sColor) {\n            if (!fColor) {\n                fColor = pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1, strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        const colorStyles = {\n            fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n        };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n        this.draw((ctx) => {\n            const transform = {};\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate, container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n            }\n            drawParticle(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, transform);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (options.fullScreen.enable) {\n            this.originalStyle = deepExtend({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else {\n            this.resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    resetOriginalStyle() {\n        const element = this.element, originalStyle = this.originalStyle;\n        if (element && originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n}\n_Canvas_context = new WeakMap();\n"]},"metadata":{},"sourceType":"module"}