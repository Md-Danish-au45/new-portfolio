{"ast":null,"code":"import { colorMix, getStyleFromHsl, getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n  context.beginPath();\n  context.moveTo(begin.x, begin.y);\n  context.lineTo(end.x, end.y);\n  context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n  context.beginPath();\n  context.moveTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.lineTo(p3.x, p3.y);\n  context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n  context.save();\n  context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n  context.fillRect(0, 0, dimension.width, dimension.height);\n  context.restore();\n}\nexport function clear(context, dimension) {\n  context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function gradient(context, p1, p2, opacity) {\n  const gradStop = Math.floor(p2.getRadius() / p1.getRadius()),\n        color1 = p1.getFillColor(),\n        color2 = p2.getFillColor();\n\n  if (!color1 || !color2) {\n    return;\n  }\n\n  const sourcePos = p1.getPosition(),\n        destPos = p2.getPosition(),\n        midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()),\n        grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n  grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n  grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n  grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n  return grad;\n}\nexport function drawParticle(container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n  const pos = particle.getPosition();\n  context.save();\n\n  if (transform.a !== undefined || transform.b !== undefined || transform.c !== undefined || transform.d !== undefined) {\n    context.setTransform((_a = transform.a) !== null && _a !== void 0 ? _a : 1, (_b = transform.b) !== null && _b !== void 0 ? _b : 0, (_c = transform.c) !== null && _c !== void 0 ? _c : 0, (_d = transform.d) !== null && _d !== void 0 ? _d : 1, pos.x, pos.y);\n  } else {\n    context.translate(pos.x, pos.y);\n  }\n\n  context.beginPath();\n  const angle = ((_f = (_e = particle.rotate) === null || _e === void 0 ? void 0 : _e.value) !== null && _f !== void 0 ? _f : 0) + (particle.options.rotate.path ? particle.velocity.angle : 0);\n\n  if (angle !== 0) {\n    context.rotate(angle);\n  }\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  const shadowColor = particle.shadowColor;\n\n  if (shadow.enable && shadowColor) {\n    context.shadowBlur = shadow.blur;\n    context.shadowColor = getStyleFromRgb(shadowColor);\n    context.shadowOffsetX = shadow.offset.x;\n    context.shadowOffsetY = shadow.offset.y;\n  }\n\n  if (colorStyles.fill) {\n    context.fillStyle = colorStyles.fill;\n  }\n\n  const stroke = particle.stroke;\n  context.lineWidth = (_g = particle.strokeWidth) !== null && _g !== void 0 ? _g : 0;\n\n  if (colorStyles.stroke) {\n    context.strokeStyle = colorStyles.stroke;\n  }\n\n  drawShape(container, context, particle, radius, opacity, delta);\n\n  if (((_h = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _h !== void 0 ? _h : 0) > 0) {\n    context.stroke();\n  }\n\n  if (particle.close) {\n    context.closePath();\n  }\n\n  if (particle.fill) {\n    context.fill();\n  }\n\n  context.restore();\n  context.save();\n\n  if (transform.a !== undefined || transform.b !== undefined || transform.c !== undefined || transform.d !== undefined) {\n    context.setTransform((_j = transform.a) !== null && _j !== void 0 ? _j : 1, (_k = transform.b) !== null && _k !== void 0 ? _k : 0, (_l = transform.c) !== null && _l !== void 0 ? _l : 0, (_m = transform.d) !== null && _m !== void 0 ? _m : 1, pos.x, pos.y);\n  } else {\n    context.translate(pos.x, pos.y);\n  }\n\n  if (angle !== 0) {\n    context.rotate(angle);\n  }\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n  context.restore();\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n\n  const drawer = container.drawers.get(particle.shape);\n\n  if (!drawer) {\n    return;\n  }\n\n  drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n\n  const drawer = container.drawers.get(particle.shape);\n\n  if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n    return;\n  }\n\n  drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n  if (!plugin.draw) {\n    return;\n  }\n\n  context.save();\n  plugin.draw(context, delta);\n  context.restore();\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n  if (!plugin.drawParticle) {\n    return;\n  }\n\n  context.save();\n  plugin.drawParticle(context, particle, delta);\n  context.restore();\n}\nexport function drawEllipse(context, particle, fillColorValue, radius, opacity, width, rotation, start, end) {\n  if (width <= 0) {\n    return;\n  }\n\n  const pos = particle.getPosition();\n\n  if (fillColorValue) {\n    context.strokeStyle = getStyleFromHsl(fillColorValue, opacity);\n  }\n\n  context.lineWidth = width;\n  const rotationRadian = rotation * Math.PI / 180;\n  context.beginPath();\n  context.ellipse(pos.x, pos.y, radius / 2, radius * 2, rotationRadian, start, end);\n  context.stroke();\n}\nexport function alterHsl(color, type, value) {\n  return {\n    h: color.h,\n    s: color.s,\n    l: color.l + (type === \"darken\" ? -1 : 1) * value\n  };\n}","map":{"version":3,"sources":["/home/danish/Desktop/danishwork/new-portfolio/node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js"],"names":["colorMix","getStyleFromHsl","getStyleFromRgb","drawLine","context","begin","end","beginPath","moveTo","x","y","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","save","fillStyle","fillRect","width","height","restore","clear","clearRect","gradient","opacity","gradStop","Math","floor","getRadius","color1","getFillColor","color2","sourcePos","getPosition","destPos","midRgb","grad","createLinearGradient","addColorStop","drawParticle","container","particle","delta","colorStyles","backgroundMask","composite","radius","shadow","transform","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","pos","a","undefined","b","c","d","setTransform","translate","angle","rotate","value","options","path","velocity","globalCompositeOperation","shadowColor","enable","shadowBlur","blur","shadowOffsetX","offset","shadowOffsetY","fill","stroke","lineWidth","strokeWidth","strokeStyle","drawShape","close","drawShapeAfterEffect","shape","drawer","drawers","get","draw","retina","pixelRatio","afterEffect","drawPlugin","plugin","drawParticlePlugin","drawEllipse","fillColorValue","rotation","start","rotationRadian","PI","ellipse","alterHsl","color","type","h","s","l"],"mappings":"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","sourcesContent":["import { colorMix, getStyleFromHsl, getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.save();\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n    context.restore();\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawParticle(container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    const pos = particle.getPosition();\n    context.save();\n    if (transform.a !== undefined ||\n        transform.b !== undefined ||\n        transform.c !== undefined ||\n        transform.d !== undefined) {\n        context.setTransform((_a = transform.a) !== null && _a !== void 0 ? _a : 1, (_b = transform.b) !== null && _b !== void 0 ? _b : 0, (_c = transform.c) !== null && _c !== void 0 ? _c : 0, (_d = transform.d) !== null && _d !== void 0 ? _d : 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    context.beginPath();\n    const angle = ((_f = (_e = particle.rotate) === null || _e === void 0 ? void 0 : _e.value) !== null && _f !== void 0 ? _f : 0) + (particle.options.rotate.path ? particle.velocity.angle : 0);\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const stroke = particle.stroke;\n    context.lineWidth = (_g = particle.strokeWidth) !== null && _g !== void 0 ? _g : 0;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (((_h = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _h !== void 0 ? _h : 0) > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    context.restore();\n    context.save();\n    if (transform.a !== undefined ||\n        transform.b !== undefined ||\n        transform.c !== undefined ||\n        transform.d !== undefined) {\n        context.setTransform((_j = transform.a) !== null && _j !== void 0 ? _j : 1, (_k = transform.b) !== null && _k !== void 0 ? _k : 0, (_l = transform.c) !== null && _l !== void 0 ? _l : 0, (_m = transform.d) !== null && _m !== void 0 ? _m : 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.restore();\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    context.save();\n    plugin.draw(context, delta);\n    context.restore();\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    context.save();\n    plugin.drawParticle(context, particle, delta);\n    context.restore();\n}\nexport function drawEllipse(context, particle, fillColorValue, radius, opacity, width, rotation, start, end) {\n    if (width <= 0) {\n        return;\n    }\n    const pos = particle.getPosition();\n    if (fillColorValue) {\n        context.strokeStyle = getStyleFromHsl(fillColorValue, opacity);\n    }\n    context.lineWidth = width;\n    const rotationRadian = rotation * Math.PI / 180;\n    context.beginPath();\n    context.ellipse(pos.x, pos.y, radius / 2, radius * 2, rotationRadian, start, end);\n    context.stroke();\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}