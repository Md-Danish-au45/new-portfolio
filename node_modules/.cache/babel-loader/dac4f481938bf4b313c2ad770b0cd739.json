{"ast":null,"code":"import { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nimport { isInArray } from \"tsparticles-engine\";\n\nclass AbsorbersPlugin {\n  constructor() {\n    this.id = \"absorbers\";\n  }\n\n  getPlugin(container) {\n    return new Absorbers(container);\n  }\n\n  loadOptions(options, source) {\n    var _a, _b;\n\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n\n    const optionsCast = options;\n\n    if (source === null || source === void 0 ? void 0 : source.absorbers) {\n      if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n        optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map(s => {\n          const tmp = new Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        let absorberOptions = optionsCast.absorbers;\n\n        if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n          optionsCast.absorbers = absorberOptions = new Absorber();\n        }\n\n        absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n      }\n    }\n\n    const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n    if (interactivityAbsorbers) {\n      if (interactivityAbsorbers instanceof Array) {\n        optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map(s => {\n          const tmp = new Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        let absorberOptions = optionsCast.interactivity.modes.absorbers;\n\n        if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n          optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber();\n        }\n\n        absorberOptions.load(interactivityAbsorbers);\n      }\n    }\n  }\n\n  needsPlugin(options) {\n    var _a, _b, _c;\n\n    if (!options) {\n      return false;\n    }\n\n    const absorbers = options.absorbers;\n\n    if (absorbers instanceof Array) {\n      return !!absorbers.length;\n    } else if (absorbers) {\n      return true;\n    } else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) && isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n      return true;\n    }\n\n    return false;\n  }\n\n}\n\nexport async function loadAbsorbersPlugin(engine) {\n  const plugin = new AbsorbersPlugin();\n  await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\nexport * from \"./Options/Interfaces/IAbsorberOptions\";","map":{"version":3,"sources":["/home/danish/Desktop/danishwork/port/node_modules/tsparticles-plugin-absorbers/esm/index.js"],"names":["Absorber","Absorbers","isInArray","AbsorbersPlugin","constructor","id","getPlugin","container","loadOptions","options","source","_a","_b","needsPlugin","optionsCast","absorbers","Array","map","s","tmp","load","absorberOptions","undefined","interactivityAbsorbers","interactivity","modes","_c","length","events","onClick","mode","loadAbsorbersPlugin","engine","plugin","addPlugin"],"mappings":"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","sourcesContent":["import { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nimport { isInArray } from \"tsparticles-engine\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n                optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.absorbers = absorberOptions = new Absorber();\n                }\n                absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.interactivity.modes.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber();\n                }\n                absorberOptions.load(interactivityAbsorbers);\n            }\n        }\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\nexport * from \"./Options/Interfaces/IAbsorberOptions\";\n"]},"metadata":{},"sourceType":"module"}