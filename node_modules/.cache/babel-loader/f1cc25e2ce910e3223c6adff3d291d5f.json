{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Canvas_context;\n\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\n\nfunction setTransformValue(factor, newFactor, key) {\n  var _a;\n\n  const newValue = newFactor[key];\n\n  if (newValue !== undefined) {\n    factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n  }\n}\n\nexport class Canvas {\n  constructor(container) {\n    this.container = container;\n\n    _Canvas_context.set(this, void 0);\n\n    this.size = {\n      height: 0,\n      width: 0\n    };\n\n    __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n\n    this.generatedCanvas = false;\n  }\n\n  clear() {\n    const options = this.container.actualOptions,\n          trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else {\n      this.draw(ctx => {\n        clear(ctx, this.size);\n      });\n    }\n  }\n\n  destroy() {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    } else {\n      this.resetOriginalStyle();\n    }\n\n    this.draw(ctx => {\n      clear(ctx, this.size);\n    });\n  }\n\n  draw(cb) {\n    if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n      return;\n    }\n\n    return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n  }\n\n  drawParticle(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n\n    if (particle.spawning || particle.destroyed) {\n      return;\n    }\n\n    const radius = particle.getRadius();\n\n    if (radius <= 0) {\n      return;\n    }\n\n    const pfColor = particle.getFillColor(),\n          psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n\n    if (!pfColor && !psColor) {\n      return;\n    }\n\n    let [fColor, sColor] = this.getPluginParticleColors(particle);\n\n    if (!fColor || !sColor) {\n      if (!fColor) {\n        fColor = pfColor ? pfColor : undefined;\n      }\n\n      if (!sColor) {\n        sColor = psColor ? psColor : undefined;\n      }\n    }\n\n    const options = this.container.actualOptions,\n          zIndexOptions = particle.options.zIndex,\n          zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate,\n          opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1,\n          strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity,\n          zOpacity = opacity * zOpacityFactor,\n          zStrokeOpacity = strokeOpacity * zOpacityFactor;\n    const colorStyles = {\n      fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n    };\n    colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n    this.draw(ctx => {\n      const transform = {};\n      const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n            container = this.container;\n\n      for (const updater of container.particles.updaters) {\n        if (updater.beforeDraw) {\n          updater.beforeDraw(particle);\n        }\n\n        if (updater.getColorStyles) {\n          const {\n            fill,\n            stroke\n          } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n\n          if (fill) {\n            colorStyles.fill = fill;\n          }\n\n          if (stroke) {\n            colorStyles.stroke = stroke;\n          }\n        }\n\n        if (updater.getTransformValues) {\n          const updaterTransform = updater.getTransformValues(particle);\n\n          for (const key in updaterTransform) {\n            setTransformValue(transform, updaterTransform, key);\n          }\n        }\n      }\n\n      drawParticle(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, transform);\n\n      for (const updater of container.particles.updaters) {\n        if (updater.afterDraw) {\n          updater.afterDraw(particle);\n        }\n      }\n    });\n  }\n\n  drawParticlePlugin(plugin, particle, delta) {\n    this.draw(ctx => {\n      drawParticlePlugin(ctx, plugin, particle, delta);\n    });\n  }\n\n  drawPlugin(plugin, delta) {\n    this.draw(ctx => {\n      drawPlugin(ctx, plugin, delta);\n    });\n  }\n\n  init() {\n    this.resize();\n    this.initStyle();\n    this.initCover();\n    this.initTrail();\n    this.initBackground();\n    this.paint();\n  }\n\n  initBackground() {\n    const options = this.container.actualOptions,\n          background = options.background,\n          element = this.element,\n          elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n    if (!elementStyle) {\n      return;\n    }\n\n    if (background.color) {\n      const color = rangeColorToRgb(background.color);\n      elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n    } else {\n      elementStyle.backgroundColor = \"\";\n    }\n\n    elementStyle.backgroundImage = background.image || \"\";\n    elementStyle.backgroundPosition = background.position || \"\";\n    elementStyle.backgroundRepeat = background.repeat || \"\";\n    elementStyle.backgroundSize = background.size || \"\";\n  }\n\n  loadCanvas(canvas) {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this.generatedCanvas;\n    this.element = canvas;\n    this.originalStyle = deepExtend({}, this.element.style);\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n\n    __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n\n    this.container.retina.init();\n    this.initBackground();\n  }\n\n  paint() {\n    const options = this.container.actualOptions;\n    this.draw(ctx => {\n      if (options.backgroundMask.enable && options.backgroundMask.cover) {\n        clear(ctx, this.size);\n        this.paintBase(this.coverColorStyle);\n      } else {\n        this.paintBase();\n      }\n    });\n  }\n\n  resize() {\n    if (!this.element) {\n      return;\n    }\n\n    const container = this.container,\n          pxRatio = container.retina.pixelRatio,\n          size = container.canvas.size,\n          newSize = {\n      width: this.element.offsetWidth * pxRatio,\n      height: this.element.offsetHeight * pxRatio\n    };\n\n    if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n      return;\n    }\n\n    const oldSize = Object.assign({}, size);\n    this.element.width = size.width = this.element.offsetWidth * pxRatio;\n    this.element.height = size.height = this.element.offsetHeight * pxRatio;\n\n    if (this.container.started) {\n      this.resizeFactor = {\n        width: size.width / oldSize.width,\n        height: size.height / oldSize.height\n      };\n    }\n  }\n\n  async windowResize() {\n    if (!this.element) {\n      return;\n    }\n\n    this.resize();\n    const container = this.container,\n          needsRefresh = container.updateActualOptions();\n    container.particles.setDensity();\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n\n    if (needsRefresh) {\n      await container.refresh();\n    }\n  }\n\n  getPluginParticleColors(particle) {\n    let fColor, sColor;\n\n    for (const [, plugin] of this.container.plugins) {\n      if (!fColor && plugin.particleFillColor) {\n        fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n      }\n\n      if (!sColor && plugin.particleStrokeColor) {\n        sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n      }\n\n      if (fColor && sColor) {\n        break;\n      }\n    }\n\n    return [fColor, sColor];\n  }\n\n  initCover() {\n    const options = this.container.actualOptions,\n          cover = options.backgroundMask.cover,\n          color = cover.color,\n          coverRgb = rangeColorToRgb(color);\n\n    if (coverRgb) {\n      const coverColor = {\n        r: coverRgb.r,\n        g: coverRgb.g,\n        b: coverRgb.b,\n        a: cover.opacity\n      };\n      this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n    }\n  }\n\n  initStyle() {\n    const element = this.element,\n          options = this.container.actualOptions;\n\n    if (!element) {\n      return;\n    }\n\n    if (options.fullScreen.enable) {\n      this.originalStyle = deepExtend({}, element.style);\n      element.style.setProperty(\"position\", \"fixed\", \"important\");\n      element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n      element.style.setProperty(\"top\", \"0\", \"important\");\n      element.style.setProperty(\"left\", \"0\", \"important\");\n      element.style.setProperty(\"width\", \"100%\", \"important\");\n      element.style.setProperty(\"height\", \"100%\", \"important\");\n    } else {\n      this.resetOriginalStyle();\n    }\n\n    for (const key in options.style) {\n      if (!key || !options.style) {\n        continue;\n      }\n\n      const value = options.style[key];\n\n      if (!value) {\n        continue;\n      }\n\n      element.style.setProperty(key, value, \"important\");\n    }\n  }\n\n  initTrail() {\n    const options = this.container.actualOptions,\n          trail = options.particles.move.trail,\n          fillColor = rangeColorToRgb(trail.fillColor);\n\n    if (fillColor) {\n      const trail = options.particles.move.trail;\n      this.trailFillColor = {\n        r: fillColor.r,\n        g: fillColor.g,\n        b: fillColor.b,\n        a: 1 / trail.length\n      };\n    }\n  }\n\n  paintBase(baseColor) {\n    this.draw(ctx => {\n      paintBase(ctx, this.size, baseColor);\n    });\n  }\n\n  resetOriginalStyle() {\n    const element = this.element,\n          originalStyle = this.originalStyle;\n\n    if (element && originalStyle) {\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n  }\n\n}\n_Canvas_context = new WeakMap();","map":{"version":3,"sources":["/home/danish/Desktop/portafolio-Nahuel/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Canvas_context","clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","deepExtend","generatedAttribute","setTransformValue","factor","newFactor","key","_a","newValue","undefined","Canvas","constructor","container","size","height","width","generatedCanvas","options","actualOptions","trail","particles","move","backgroundMask","enable","paint","length","trailFillColor","draw","ctx","destroy","element","remove","resetOriginalStyle","cb","particle","delta","_b","_c","_d","_e","_f","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","fColor","sColor","getPluginParticleColors","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","opacity","bubble","strokeOpacity","stroke","zOpacity","zStrokeOpacity","colorStyles","fill","transform","zSizeFactor","sizeRate","updater","updaters","beforeDraw","getColorStyles","getTransformValues","updaterTransform","composite","shadow","afterDraw","plugin","init","resize","initStyle","initCover","initTrail","initBackground","background","elementStyle","style","color","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","loadCanvas","canvas","dataset","originalStyle","offsetHeight","offsetWidth","getContext","retina","cover","coverColorStyle","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","plugins","refresh","particleFillColor","particleStrokeColor","coverRgb","coverColor","r","g","b","a","fullScreen","setProperty","toString","fillColor","baseColor","top","left","WeakMap"],"mappings":"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","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Canvas_context;\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        _Canvas_context.set(this, void 0);\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n        this.generatedCanvas = false;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        else {\n            this.resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    draw(cb) {\n        if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n            return;\n        }\n        return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor || !sColor) {\n            if (!fColor) {\n                fColor = pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1, strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        const colorStyles = {\n            fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n        };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n        this.draw((ctx) => {\n            const transform = {};\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate, container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n            }\n            drawParticle(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow, transform);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (options.fullScreen.enable) {\n            this.originalStyle = deepExtend({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else {\n            this.resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    resetOriginalStyle() {\n        const element = this.element, originalStyle = this.originalStyle;\n        if (element && originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n    }\n}\n_Canvas_context = new WeakMap();\n"]},"metadata":{},"sourceType":"module"}