{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar _Plugins_engine;\n\nexport class Plugins {\n  constructor(engine) {\n    _Plugins_engine.set(this, void 0);\n\n    __classPrivateFieldSet(this, _Plugins_engine, engine, \"f\");\n\n    this.plugins = [];\n    this.interactorsInitializers = new Map();\n    this.moversInitializers = new Map();\n    this.updatersInitializers = new Map();\n    this.interactors = new Map();\n    this.movers = new Map();\n    this.updaters = new Map();\n    this.presets = new Map();\n    this.drawers = new Map();\n    this.pathGenerators = new Map();\n  }\n\n  addInteractor(name, initInteractor) {\n    this.interactorsInitializers.set(name, initInteractor);\n  }\n\n  addParticleMover(name, initMover) {\n    this.moversInitializers.set(name, initMover);\n  }\n\n  addParticleUpdater(name, initUpdater) {\n    this.updatersInitializers.set(name, initUpdater);\n  }\n\n  addPathGenerator(type, pathGenerator) {\n    if (!this.getPathGenerator(type)) {\n      this.pathGenerators.set(type, pathGenerator);\n    }\n  }\n\n  addPlugin(plugin) {\n    if (!this.getPlugin(plugin.id)) {\n      this.plugins.push(plugin);\n    }\n  }\n\n  addPreset(presetKey, options) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (override || !this.getPreset(presetKey)) {\n      this.presets.set(presetKey, options);\n    }\n  }\n\n  addShapeDrawer(type, drawer) {\n    if (!this.getShapeDrawer(type)) {\n      this.drawers.set(type, drawer);\n    }\n  }\n\n  destroy(container) {\n    this.updaters.delete(container);\n    this.movers.delete(container);\n    this.interactors.delete(container);\n  }\n\n  getAvailablePlugins(container) {\n    const res = new Map();\n\n    for (const plugin of this.plugins) {\n      if (!plugin.needsPlugin(container.actualOptions)) {\n        continue;\n      }\n\n      res.set(plugin.id, plugin.getPlugin(container));\n    }\n\n    return res;\n  }\n\n  getInteractors(container) {\n    let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let res = this.interactors.get(container);\n\n    if (!res || force) {\n      res = [...this.interactorsInitializers.values()].map(t => t(container));\n      this.interactors.set(container, res);\n    }\n\n    return res;\n  }\n\n  getMovers(container) {\n    let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let res = this.movers.get(container);\n\n    if (!res || force) {\n      res = [...this.moversInitializers.values()].map(t => t(container));\n      this.movers.set(container, res);\n    }\n\n    return res;\n  }\n\n  getPathGenerator(type) {\n    return this.pathGenerators.get(type);\n  }\n\n  getPlugin(plugin) {\n    return this.plugins.find(t => t.id === plugin);\n  }\n\n  getPreset(preset) {\n    return this.presets.get(preset);\n  }\n\n  getShapeDrawer(type) {\n    return this.drawers.get(type);\n  }\n\n  getSupportedShapes() {\n    return this.drawers.keys();\n  }\n\n  getUpdaters(container) {\n    let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let res = this.updaters.get(container);\n\n    if (!res || force) {\n      res = [...this.updatersInitializers.values()].map(t => t(container));\n      this.updaters.set(container, res);\n    }\n\n    return res;\n  }\n\n  loadOptions(options, sourceOptions) {\n    for (const plugin of this.plugins) {\n      plugin.loadOptions(options, sourceOptions);\n    }\n  }\n\n  loadParticlesOptions(container, options) {\n    const updaters = this.updaters.get(container);\n\n    if (!updaters) {\n      return;\n    }\n\n    for (var _len = arguments.length, sourceOptions = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      sourceOptions[_key - 2] = arguments[_key];\n    }\n\n    for (const updater of updaters) {\n      if (updater.loadOptions) {\n        updater.loadOptions(options, ...sourceOptions);\n      }\n    }\n  }\n\n}\n_Plugins_engine = new WeakMap();","map":{"version":3,"sources":["/home/danish/Desktop/danishwork/new-portfolio/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js"],"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","_Plugins_engine","Plugins","constructor","engine","plugins","interactorsInitializers","Map","moversInitializers","updatersInitializers","interactors","movers","updaters","presets","drawers","pathGenerators","addInteractor","name","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","type","pathGenerator","getPathGenerator","addPlugin","plugin","getPlugin","id","push","addPreset","presetKey","options","override","getPreset","addShapeDrawer","drawer","getShapeDrawer","destroy","container","delete","getAvailablePlugins","res","needsPlugin","actualOptions","getInteractors","force","get","values","map","t","getMovers","find","preset","getSupportedShapes","keys","getUpdaters","loadOptions","sourceOptions","loadParticlesOptions","updater","WeakMap"],"mappings":"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","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Plugins_engine;\nexport class Plugins {\n    constructor(engine) {\n        _Plugins_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Plugins_engine, engine, \"f\");\n        this.plugins = [];\n        this.interactorsInitializers = new Map();\n        this.moversInitializers = new Map();\n        this.updatersInitializers = new Map();\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this.interactorsInitializers.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this.moversInitializers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this.updatersInitializers.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(type, drawer) {\n        if (!this.getShapeDrawer(type)) {\n            this.drawers.set(type, drawer);\n        }\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        let res = this.interactors.get(container);\n        if (!res || force) {\n            res = [...this.interactorsInitializers.values()].map((t) => t(container));\n            this.interactors.set(container, res);\n        }\n        return res;\n    }\n    getMovers(container, force = false) {\n        let res = this.movers.get(container);\n        if (!res || force) {\n            res = [...this.moversInitializers.values()].map((t) => t(container));\n            this.movers.set(container, res);\n        }\n        return res;\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        let res = this.updaters.get(container);\n        if (!res || force) {\n            res = [...this.updatersInitializers.values()].map((t) => t(container));\n            this.updaters.set(container, res);\n        }\n        return res;\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n_Plugins_engine = new WeakMap();\n"]},"metadata":{},"sourceType":"module"}