{"ast":null,"code":"import { Vector } from \"./Vector\";\nexport class Vector3d extends Vector {\n  constructor(xOrCoords, y, z) {\n    super(xOrCoords, y);\n\n    if (typeof xOrCoords !== \"number\" && xOrCoords) {\n      this.z = xOrCoords.z;\n    } else if (z !== undefined) {\n      this.z = z;\n    } else {\n      throw new Error(\"tsParticles - Vector not initialized correctly\");\n    }\n  }\n\n  static get origin() {\n    return Vector3d.create(0, 0, 0);\n  }\n\n  static clone(source) {\n    return Vector3d.create(source.x, source.y, source.z);\n  }\n\n  static create(x, y, z) {\n    return new Vector3d(x, y, z);\n  }\n\n  add(v) {\n    return v instanceof Vector3d ? Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z) : super.add(v);\n  }\n\n  addTo(v) {\n    super.addTo(v);\n\n    if (v instanceof Vector3d) {\n      this.z += v.z;\n    }\n  }\n\n  copy() {\n    return Vector3d.clone(this);\n  }\n\n  div(n) {\n    return Vector3d.create(this.x / n, this.y / n, this.z / n);\n  }\n\n  divTo(n) {\n    super.divTo(n);\n    this.z /= n;\n  }\n\n  mult(n) {\n    return Vector3d.create(this.x * n, this.y * n, this.z * n);\n  }\n\n  multTo(n) {\n    super.multTo(n);\n    this.z *= n;\n  }\n\n  setTo(v) {\n    super.setTo(v);\n    const v3d = v;\n\n    if (v3d.z !== undefined) {\n      this.z = v3d.z;\n    }\n  }\n\n  sub(v) {\n    return v instanceof Vector3d ? Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z) : super.sub(v);\n  }\n\n  subFrom(v) {\n    super.subFrom(v);\n\n    if (v instanceof Vector3d) {\n      this.z -= v.z;\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/danish/Desktop/danishwork/port/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js"],"names":["Vector","Vector3d","constructor","xOrCoords","y","z","undefined","Error","origin","create","clone","source","x","add","v","addTo","copy","div","n","divTo","mult","multTo","setTo","v3d","sub","subFrom"],"mappings":"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","sourcesContent":["import { Vector } from \"./Vector\";\nexport class Vector3d extends Vector {\n    constructor(xOrCoords, y, z) {\n        super(xOrCoords, y);\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.z = xOrCoords.z;\n        }\n        else if (z !== undefined) {\n            this.z = z;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return v instanceof Vector3d ? Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z) : super.add(v);\n    }\n    addTo(v) {\n        super.addTo(v);\n        if (v instanceof Vector3d) {\n            this.z += v.z;\n        }\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        super.divTo(n);\n        this.z /= n;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        super.multTo(n);\n        this.z *= n;\n    }\n    setTo(v) {\n        super.setTo(v);\n        const v3d = v;\n        if (v3d.z !== undefined) {\n            this.z = v3d.z;\n        }\n    }\n    sub(v) {\n        return v instanceof Vector3d ? Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z) : super.sub(v);\n    }\n    subFrom(v) {\n        super.subFrom(v);\n        if (v instanceof Vector3d) {\n            this.z -= v.z;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}